package exercises.cycles;

/**
 * Метод принимает целочисленное значение.
 * Необходимо проверить является ли оно симметричным или нет.
 * Симметричным считается число которое в котором числа
 * идущие по порядку в прямом и обратном порядке равны друг другу.
 *
 * Для решения можете преобразовать число в строку. Проходите по полученной строке в цикле,
 * до середины и сравниваете символ который стоит на первой позиции  с символом на последней,
 * второй позиции с символом на предпоследней и т.д.
 * Для извлечения символов используйте метод charAt().
 *
 * Метод должен вернуть true, если число симметричное.
 */

public class Symmetry17 {
    public static boolean check(int i) {
        String str = Integer.toString(i);
        int j = 0;
        while (j++ < str.length() / 2) {
            if (str.charAt(j) != str.charAt(str.length() - 1 - j)) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        System.out.println(check(3125213));
    }
}
